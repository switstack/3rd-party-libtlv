name: build

on:
  workflow_call:

jobs:

  build:

    strategy:
      matrix:
        configuration:
          - os: ubuntu-22.04
            compiler: g++-11
            packages: gcc-11 g++-11 cpputest
          
          - os: ubuntu-22.04
            compiler: clang++-14
            packages: clang-14 cpputest
          
          - os: macos-13
            compiler: clang++
            packages: cpputest
          
          - os: windows-2019
            compiler: cl
            packages: ~

    runs-on: ${{ matrix.configuration.os }}

    env:
      BUILD_DIRECTORY: ./build
      SOURCE_DIRECTORY: .

    steps:
  
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up build environment
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == 'Linux' ]]; then
            distribution=$(cat /etc/*-release | grep ID | awk 'FNR <= 1' | cut -d '=' -f2 | tr '[:upper:]' '[:lower:]')
            if [[ "$distribution" == 'debian' || "$distribution" == 'ubuntu' ]]; then
              sudo apt update
              sudo apt install -y \
                ${{ matrix.configuration.packages }}
            else
              echo "Linux distribution '$distribution' not supported"
              exit 1
            fi
          elif [[ "$RUNNER_OS" == 'macOS' ]]; then
            brew install \
              ${{ matrix.configuration.packages }}
          fi

      - name: Configure
        shell: bash
        run: |
          cmake \
            -B "${{ env.BUILD_DIRECTORY }}" \
            -S "${{ env.SOURCE_DIRECTORY }}" \
            -D CMAKE_CXX_COMPILER="${{ matrix.configuration.compiler }}" \
            -D CMAKE_BUILD_TYPE="Release" \
            -D TLV_BUILD_TESTS="${{ runner.os == 'Linux' && 'ON' || 'OFF'  }}"

      - name: Build
        shell: bash
        run: |
          cmake \
            --build \
            "${{ env.BUILD_DIRECTORY }}"

      - name: Test
        if: runner.os == 'Linux'
        shell: bash
        run: |
          ctest \
            --test-dir \
            "${{ env.BUILD_DIRECTORY }}" \
            --no-tests=error
